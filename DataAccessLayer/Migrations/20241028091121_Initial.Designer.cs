// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(ProductStoreDbContext))]
    [Migration("20241028091121_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAccessLayer.AccountMember", b =>
                {
                    b.Property<string>("MemberID")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("MemberPassword")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("MemberRole")
                        .HasColumnType("int");

                    b.HasKey("MemberID");

                    b.ToTable("AccountMembers");

                    b.HasData(
                        new
                        {
                            MemberID = "PS001",
                            EmailAddress = "hoanghung250604@gmail.com",
                            FullName = "HungHV",
                            MemberPassword = "123",
                            MemberRole = 1
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            CategoryName = "Beverages"
                        },
                        new
                        {
                            CategoryID = 2,
                            CategoryName = "Condiments"
                        },
                        new
                        {
                            CategoryID = 3,
                            CategoryName = "Confections"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("UnitsInStock")
                        .HasColumnType("smallint");

                    b.HasKey("ProductID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            CategoryID = 3,
                            ProductName = "Chai",
                            UnitPrice = 18m,
                            UnitsInStock = (short)12
                        },
                        new
                        {
                            ProductID = 2,
                            CategoryID = 1,
                            ProductName = "Chang",
                            UnitPrice = 19m,
                            UnitsInStock = (short)23
                        },
                        new
                        {
                            ProductID = 3,
                            CategoryID = 2,
                            ProductName = "Oto",
                            UnitPrice = 30m,
                            UnitsInStock = (short)12
                        },
                        new
                        {
                            ProductID = 4,
                            CategoryID = 2,
                            ProductName = "Aniseed",
                            UnitPrice = 27m,
                            UnitsInStock = (short)12
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Product", b =>
                {
                    b.HasOne("DataAccessLayer.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DataAccessLayer.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
